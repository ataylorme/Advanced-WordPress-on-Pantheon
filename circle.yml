machine:
  timezone:
    America/Chicago

  node:
    version: 5.5.0

  php:
    version: 7.1.3

  environment:
      YARN_VERSION: 0.18.1
      PATH: "${PATH}:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:${HOME}/terminus/bin"
      WORDPRESS_ADMIN_USERNAME: pantheon
      # A random password is set in the dependencies:pre stage as a text file.
      # This line reads the same file repeatedly. If the openssl call were used
      # in this step, it would result in a different password being used in each
      # line of other steps. Each CircleCI command runs in a separate shell.
      WORDPRESS_ADMIN_PASSWORD: $(cat ~/WORDPRESS_ADMIN_PASSWORD)

  # This will be added to the `/etc/hosts` file
  hosts:
    wp-best-practices.dev: 127.0.0.1

dependencies:
  cache_directories:
    - ~/.composer/cache
    - ~/.terminus/tokens
    - /home/ubuntu/nvm/versions/node/4.3.1/bin
    - /home/ubuntu/nvm/versions/node/4.3.1/lib/node_modules
    - /usr/local/bin/terminus
    - ~/.yarn
    - ~/.cache/yarn
    - ~/terminus

  pre:
    # Dynamic hosts through Pantheon mean constantly checking interactively
    # that we mean to connect to an unknown host. We ignore those here.
    - echo Disabling strict host checking
    - echo "StrictHostKeyChecking no" > ~/.ssh/config

    # Set the PHP timezone so that Behat script does not fail.
    #- echo "date.timezone = 'US/Central'"  >  /opt/circleci/php/5.6.14/etc/conf.d/xdebug.ini

    # The environment step uses this file to set a global variable.
    - echo $(openssl rand -hex 8) > ~/WORDPRESS_ADMIN_PASSWORD

    # Install Yarn
    - |
      if [[ ! -e ~/.yarn/bin/yarn || $(yarn --version) != "${YARN_VERSION}" ]]; then
        echo "Download and install Yarn."
        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
      else
        echo "The correct version of Yarn is already installed."
      fi

    # Use cURL to fetch WP-CLI
    # - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar

    # Make sure WP-CLI is executable
    # - chmod +x wp-cli.phar

    # Set github token to avoid rate limit
    - |
      echo "Setting GitHub OAuth token with suppressed ouput"
      {
        composer config --global github-oauth.github.com $GIT_TOKEN
      } &> /dev/null

    - git config --global user.email $GIT_EMAIL
    - git config --global user.name $GIT_USERNAME

    # Install gulp
    - >
      if [ -z "${RUN_BEHAT_BUILD}" ]; then
        echo Installing gulp globally; yarn global add gulp
      fi

    # Install Terminus
    - ./bin/install_terminus.sh

    # Install jq
    - >
      if [ -n "${RUN_BEHAT_BUILD}" ]; then
        sudo apt-get update; sudo apt-get install jq
      fi

    # Authenticate with Terminus
    - ./bin/terminus_auth.sh

  override:
    - >
      if [[ "${CIRCLE_BRANCH}" == "master" || -n "${CI_PULL_REQUEST}" || -n "${RUN_BEHAT_BUILD}" ]]; then
        composer install --dev;
      else
        ./bin/build.sh;
      fi

test:
  pre:
    - >
      if [ -n "${RUN_BEHAT_BUILD}" ]; then
        ./bin/behat-prepare.sh;
      fi
  override:
    - >
      if [ -n "${RUN_BEHAT_BUILD}" ]; then
        ./bin/behat-test.sh --strict;
      fi
    -  ./vendor/bin/phpunit
  post:
    - >
      if [ -n "${RUN_BEHAT_BUILD}" ]; then
        ./bin/behat-cleanup.sh;
      fi

deployment:
  pantheon:
    branch: /.*/
    commands:
      - >
        if [ -z "${RUN_BEHAT_BUILD}" ]; then
          ./bin/deploy_to_pantheon.sh;
        fi
